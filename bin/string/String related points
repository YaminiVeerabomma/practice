 								thread safty						 perfomance			usecase
string 			immutable		thread-safe					         slow
stringBuffer	mutable			thread-safe		syncronized			slower	 1.0v    multy thread
stringBulder	mutable			non Thread=safe	non syncronized		faster	  1.5   single thread

   String:=Memory Consumption:Higher (due to new object creation on each modification)

 **When to Use Which:
 **Use String:

When you don't need to modify the string or when the string is a constant.
When thread safety is needed (due to immutability).
For storing fixed values (e.g., string constants).
**Use StringBuffer:
When you're dealing with multiple threads that will modify the same string object.
When you're working with legacy code that already uses StringBuffer.
**Use StringBuilder:
When you're working in a single-threaded context, or when thread safety is not a concern.
When performance is important and you're manipulating strings without concurrent access.

** how to read the string in one bey one character
charAt(i);//i can be changed
**
k-anagram
K-Anagram in Java - Theory Explanation
A K-Anagram is a concept in string processing that extends the idea of an anagram. Two strings are said to be K-Anagrams if:

They have the same length.

They can be transformed into each other by changing at most K characters.

This means that by modifying at most K positions in one string, we can obtain the other string.

Theory Behind K-Anagram
To check if two strings are K-Anagrams, follow these steps:

Check Lengths:

If the two strings are of different lengths, they cannot be K-Anagrams.

Count Frequency of Characters:

Use a frequency array or HashMap to count occurrences of characters in both strings.

Calculate Differences:

Find characters that have different frequencies in the two strings.

Count the total number of differences.

Compare with K:

If the total number of changes needed is less than or equal to K, then the strings are K-Anagrams.

Otherwise, they are not.

Example
Input
java
Copy
Edit
String s1 = "apple";
String s2 = "appla";
int k = 1;
Explanation
The words "apple" and "appla" differ at 1 position ('e' vs 'a').

Since k = 1, and only 1 change is needed, they are K-Anagrams.
Data Type	Size (in bytes)	Range	Default Value
byte	1 byte (8 bits)		–128 to 127	0
short	2 bytes				–32,768 to 32,767	0
int		4 bytes				–2,147,483,648 to 2,147,483,647	0
long	8 bytes				–9,223,372,036,854,775,808 to 9,223,372,036,854,775,807	0L
float	4 bytes				~±3.4e–38 to ±3.4e+38 (7 decimal digits)	0.0f
double	8 bytes				~±1.7e–308 to ±1.7e+308 (15 decimal digits)	0.0d
char	2 bytes (Unicode)	0 to 65,535 (single 16-bit Unicode char)	'\u0000'
boolean	1 bit (logical)		true or false	false
 
